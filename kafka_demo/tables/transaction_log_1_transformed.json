{
  "metadata" : {
    "schema.watermark.0.strategy.expr" : "`eventTimestamp` - INTERVAL '3' SECOND",
    "properties.auto.offset.reset" : "earliest",
    "scan.transform.js.b64.encoded" : "false",
    "schema.2.virtual" : "false",
    "schema.0.data-type" : "VARCHAR(2147483647)",
    "scan.transform.js.code" : "var topic = record.topic;\n// Kafka record key, if any\nvar key = record.key;\n// Kafka partition\nvar partition = record.partition;\n// Kafka record offset\nvar offset = record.offset;\n// Kafka record headers (if any)\nvar headers = JSON.parse(record.headers);\nvar headers_map = headers ? headers.reduce(function(acc, cur) {\n acc[cur[0]] = cur[1];\n return acc;\n}, {}) : {};\n// Kafka payload (record value JSON deserialized to JavaScript object)\nvar payload = JSON.parse(record.value);\n \nvar output = {};\noutput['topic'] = topic;\noutput['key'] = key;\noutput['itemId'] = payload.itemId;\noutput['transactionType'] = payload.quantity > 0 ?\n'inputTransaction' : 'outputTransaction';\nJSON.stringify(output);",
    "schema.2.metadata" : "timestamp",
    "schema.2.name" : "eventTimestamp",
    "format" : "json",
    "schema.1.name" : "transactionType",
    "scan.startup.mode" : "earliest-offset",
    "schema.1.data-type" : "VARCHAR(2147483647)",
    "connector" : "kafka: kafka",
    "schema.2.data-type" : "TIMESTAMP(3) WITH LOCAL TIME ZONE",
    "properties.request.timeout.ms" : "120000",
    "schema.watermark.0.rowtime" : "eventTimestamp",
    "schema.watermark.0.strategy.data-type" : "TIMESTAMP(3)",
    "properties.transaction.timeout.ms" : "900000",
    "topic" : "transaction.log.1",
    "schema.0.name" : "itemId",
    "ssb.schema.text" : "{\n\t\"type\":  \"record\",\n\t\"name\":  \"exampleSchema\",\n\t\"fields\":  [\n\t\t{\n\t\t\t\"name\":  \"itemId\",\n\t\t\t\"type\":  \"string\"\n\t\t},\n\t\t{\n\t\t\t\"name\":  \"transactionType\",\n\t\t\t\"type\":  \"string\"\n\t\t}\n\t]\n}",
    "ssb.watermark_spec" : {
      "timestamp_column" : "__ssb_kafka_timestamp"
    },
    "ssb.properties" : {
      "auto.offset.reset" : "earliest"
    }
  },
  "type" : "ssb",
  "table_name" : "transaction_log_1_transformed",
  "transform_code_b64_encoded" : false,
  "transform_code" : "var topic = record.topic;\n// Kafka record key, if any\nvar key = record.key;\n// Kafka partition\nvar partition = record.partition;\n// Kafka record offset\nvar offset = record.offset;\n// Kafka record headers (if any)\nvar headers = JSON.parse(record.headers);\nvar headers_map = headers ? headers.reduce(function(acc, cur) {\n acc[cur[0]] = cur[1];\n return acc;\n}, {}) : {};\n// Kafka payload (record value JSON deserialized to JavaScript object)\nvar payload = JSON.parse(record.value);\n \nvar output = {};\noutput['topic'] = topic;\noutput['key'] = key;\noutput['itemId'] = payload.itemId;\noutput['transactionType'] = payload.quantity > 0 ?\n'inputTransaction' : 'outputTransaction';\nJSON.stringify(output);"
}